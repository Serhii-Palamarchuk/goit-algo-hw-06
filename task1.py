#Завдання 1
# Створіть граф за допомогою бібліотеки networkX для моделювання певної реальної мережі (наприклад, транспортної мережі міста, соціальної мережі, інтернет-топології).
# Візуалізуйте створений граф, проведіть аналіз основних характеристик (наприклад, кількість вершин та ребер, ступінь вершин).

import networkx as nx
import matplotlib.pyplot as plt

# Створимо граф, що моделює транспортну мережу Києва
# Вершини представляють певні райони, а ребра - транспортні зв'язки між ними
G = nx.Graph()

# Додаємо вершини (райони Києва)
G.add_nodes_from(["Печерський", "Шевченківський", "Оболонський", "Дарницький", "Дніпровський", "Голосіївський", "Подільський"])

# Додаємо ребра (зв'язки між районами)
G.add_edges_from([
    ("Печерський", "Шевченківський"),
    ("Печерський", "Оболонський"),
    ("Печерський", "Дарницький"),
    ("Печерський", "Дніпровський"),
    ("Шевченківський", "Подільський"),
    ("Оболонський", "Подільський"),
    ("Дарницький", "Дніпровський"),
    ("Голосіївський", "Дарницький"),
    ("Голосіївський", "Подільський")
])

# Візуалізуємо граф
plt.figure(figsize=(10, 8))
pos = nx.spring_layout(G)  # Алгоритм розташування вузлів для гарної візуалізації
nx.draw(G, pos, with_labels=True, node_color='skyblue', node_size=2000, font_size=15, font_weight='bold', edge_color='gray')
plt.title("Транспортна мережа Києва")
plt.text(0, -1.1, "Цей граф представляє модель транспортних зв'язків між районами Києва.\nВершини графу - це райони, а ребра - транспортні маршрути між ними.", fontsize=12, ha='center')

# Додаємо підсумки на графік
plt.text(-1.5, -1.3, f"Кількість вершин (районів): {G.number_of_nodes()}\nКількість ребер (зв'язків): {G.number_of_edges()}", fontsize=12, ha='left')

plt.show()

# Аналіз основних характеристик графу
num_nodes = G.number_of_nodes()
num_edges = G.number_of_edges()
degree_dict = dict(G.degree())

print(f"Кількість вершин (районів): {num_nodes}")
print(f"Кількість ребер (зв'язків): {num_edges}")
print("Ступінь кожної вершини (кількість зв'язків для кожного району):")
for node, degree in degree_dict.items():
    print(f"{node}: {degree}")